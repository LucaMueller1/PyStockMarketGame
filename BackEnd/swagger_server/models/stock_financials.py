# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class StockFinancials(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, wkn: str=None, long_description: str=None, country: str=None, industry: str=None, dividend: str=None):  # noqa: E501
        """StockFinancials - a model defined in Swagger

        :param wkn: The wkn of this StockFinancials.  # noqa: E501
        :type wkn: str
        :param long_description: The long_description of this StockFinancials.  # noqa: E501
        :type long_description: str
        :param country: The country of this StockFinancials.  # noqa: E501
        :type country: str
        :param industry: The industry of this StockFinancials.  # noqa: E501
        :type industry: str
        :param dividend: The dividend of this StockFinancials.  # noqa: E501
        :type dividend: str
        """
        self.swagger_types = {
            'wkn': str,
            'long_description': str,
            'country': str,
            'industry': str,
            'dividend': str
        }

        self.attribute_map = {
            'wkn': 'wkn',
            'long_description': 'longDescription',
            'country': 'country',
            'industry': 'industry',
            'dividend': 'dividend'
        }

        self._wkn = wkn
        self._long_description = long_description
        self._country = country
        self._industry = industry
        self._dividend = dividend

    @classmethod
    def from_dict(cls, dikt) -> 'StockFinancials':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The StockFinancials of this StockFinancials.  # noqa: E501
        :rtype: StockFinancials
        """
        return util.deserialize_model(dikt, cls)

    @property
    def wkn(self) -> str:
        """Gets the wkn of this StockFinancials.


        :return: The wkn of this StockFinancials.
        :rtype: str
        """
        return self._wkn

    @wkn.setter
    def wkn(self, wkn: str):
        """Sets the wkn of this StockFinancials.


        :param wkn: The wkn of this StockFinancials.
        :type wkn: str
        """

        self._wkn = wkn

    @property
    def long_description(self) -> str:
        """Gets the long_description of this StockFinancials.


        :return: The long_description of this StockFinancials.
        :rtype: str
        """
        return self._long_description

    @long_description.setter
    def long_description(self, long_description: str):
        """Sets the long_description of this StockFinancials.


        :param long_description: The long_description of this StockFinancials.
        :type long_description: str
        """

        self._long_description = long_description

    @property
    def country(self) -> str:
        """Gets the country of this StockFinancials.


        :return: The country of this StockFinancials.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country: str):
        """Sets the country of this StockFinancials.


        :param country: The country of this StockFinancials.
        :type country: str
        """

        self._country = country

    @property
    def industry(self) -> str:
        """Gets the industry of this StockFinancials.


        :return: The industry of this StockFinancials.
        :rtype: str
        """
        return self._industry

    @industry.setter
    def industry(self, industry: str):
        """Sets the industry of this StockFinancials.


        :param industry: The industry of this StockFinancials.
        :type industry: str
        """

        self._industry = industry

    @property
    def dividend(self) -> str:
        """Gets the dividend of this StockFinancials.


        :return: The dividend of this StockFinancials.
        :rtype: str
        """
        return self._dividend

    @dividend.setter
    def dividend(self, dividend: str):
        """Sets the dividend of this StockFinancials.


        :param dividend: The dividend of this StockFinancials.
        :type dividend: str
        """

        self._dividend = dividend
